<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <assignments>
        <name>Set_Order_Count</name>
        <label>Set Order Count</label>
        <locationX>182</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>OrderCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Orders</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Account</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Prior_Count</name>
        <label>Set Prior Count</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>OrderCountPrior</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Prior_Orders</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Prior_Account</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>I_Is_New_Or_Country_Or_Account_Was_changed</name>
        <label>Is New Or Country Or Account Was Changed</label>
        <locationX>380</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>It_Is_New_Or_Status_Was_Changed</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ShippingCity</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.Id</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNewAndUSA</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Orders</targetReference>
            </connector>
            <label>Is New Or Country Or Account Was Changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Was_Account_Changed_And_Prior_Wasn_t_Null</name>
        <label>Was Account Changed And Prior Wasn&apos;t Null</label>
        <locationX>182</locationX>
        <locationY>755</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Account_Was_Changed_And_Prior_Wasn_t_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.Id</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Account.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Prior_Orders</targetReference>
            </connector>
            <label>Account Was Changed And Prior Wasn&apos;t Null</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>IsNewAndUSA</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW() &amp;&amp; {!$Record.ShippingCity} == &apos;USA&apos;</expression>
    </formulas>
    <interviewLabel>Order Count For Account {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Order Count Of Account</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Orders</name>
        <label>Get Orders</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Order_Count</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ShippingCountry</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>USA</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Order</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Prior_Orders</name>
        <label>Get Prior Orders</label>
        <locationX>50</locationX>
        <locationY>863</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Prior_Count</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Account.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ShippingCountry</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>USA</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Order</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Account</name>
        <label>Update Account</label>
        <locationX>182</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>Was_Account_Changed_And_Prior_Wasn_t_Null</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OrderCount__c</field>
            <value>
                <elementReference>OrderCount</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Prior_Account</name>
        <label>Update Prior Account</label>
        <locationX>50</locationX>
        <locationY>1079</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OrderCount__c</field>
            <value>
                <elementReference>OrderCountPrior</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>I_Is_New_Or_Country_Or_Account_Was_changed</targetReference>
        </connector>
        <object>Order</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>OrderCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>OrderCountPrior</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
